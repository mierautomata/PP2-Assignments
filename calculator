import javafx.application.Application;
import javafx.geometry.Pos;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.TextField;
import javafx.scene.layout.VBox;
import javafx.scene.paint.Color;
import javafx.scene.text.Font;
import javafx.stage.Stage;

public class calculator extends Application {
    @Override
    public void start(Stage stage) {
        // create and configure a text field for user entry
        TextField pushMeTextField = new TextField();
        pushMeTextField.setMaxWidth(250);

        TextField secondField = new TextField();
        secondField.setMaxWidth(250);

        // create and configure a label to display the output
        Label pushMeLabel = new Label();
        pushMeLabel.setTextFill(Color.RED);
        pushMeLabel.setFont(Font.font("Arial", 20));

        // create and configure a label for the pushMeButton
        Label pushMeButtonLabel = new Label("+");
        pushMeButtonLabel.setFont(Font.font("Arial", 20));
        

        Button pushMeButton = new Button();
        pushMeButton.setGraphic(pushMeButtonLabel);
        pushMeButton.setOnAction(e -> {
            // Get the text from pushMeTextField and secondField
            String text1 = pushMeTextField.getText();
            String text2 = secondField.getText();

            // Parse the text as double values
            try {
                double number1 = Double.parseDouble(text1);
                double number2 = Double.parseDouble(text2);

                // Perform addition operation
                double result = number1 + number2;

                // Update pushMeLabel with the result
                pushMeLabel.setText("Result of " + number1 + " + " + number2 + " = " + result);
            } catch (NumberFormatException ex) {
                // Handle the case where the input is not a valid double
                pushMeLabel.setText("Please enter valid numbers.");
            }
        });

        // create and configure a label for the minusButton
        
        Label minusLabel = new Label();
        minusLabel.setTextFill(Color.RED);
        minusLabel.setFont(Font.font("Arial", 20));
        
        Label minusButtonLabel = new Label("-");
        minusButtonLabel.setFont(Font.font("Arial", 20));

        Button minusButton = new Button();
        minusButton.setGraphic(minusButtonLabel);
        minusButton.setOnAction(e -> {
            String text1 = pushMeTextField.getText();
            String text2 = secondField.getText();

            try {
                double number1 = Double.parseDouble(text1);
                double number2 = Double.parseDouble(text2);
               
                double result = number1 - number2;
           
                minusLabel.setText("Result of " + number1 + " - " + number2 + " = " + result);
            } catch (NumberFormatException ex) {
                
                minusLabel.setText("Please enter valid numbers.");
            }
        });
        
        Label timesLabel = new Label();
        timesLabel.setTextFill(Color.RED);
        timesLabel.setFont(Font.font("Arial", 20));
        
        Label timesButtonLabel = new Label("x");
        timesButtonLabel.setFont(Font.font("Arial", 20));
        

        Button timesButton = new Button();
        timesButton.setGraphic(timesButtonLabel);
        timesButton.setOnAction(e -> {
            String text1 = pushMeTextField.getText();
            String text2 = secondField.getText();

            try {
                double number1 = Double.parseDouble(text1);
                double number2 = Double.parseDouble(text2);
               
                double result = number1 * number2;
           
                timesLabel.setText("Result of " + number1 + " * " + number2 + " = " + result);
            } catch (NumberFormatException ex) {
                
                timesLabel.setText("Please enter valid numbers.");
            }
        });
        
        Label divideLabel = new Label();
        divideLabel.setTextFill(Color.RED);
        divideLabel.setFont(Font.font("Arial", 20));
        
        Label divideButtonLabel = new Label("/");
        divideButtonLabel.setFont(Font.font("Arial", 20));
        
        Button divideButton = new Button();
        divideButton.setGraphic(divideButtonLabel);
        divideButton.setOnAction(e -> {
            String text1 = pushMeTextField.getText();
            String text2 = secondField.getText();

            try {
                double number1 = Double.parseDouble(text1);
                double number2 = Double.parseDouble(text2);
                if(number2 == 0) {
                    divideLabel.setText("Cannot divide by zero");
                } else {
                    double result = number1 / number2;
                    divideLabel.setText("Result of " + number1 + " / " + number2 + " = " + result);
                }
            } catch (NumberFormatException ex) {
                divideLabel.setText("Please enter valid numbers.");
            }
        });

        // create and configure a VBox to hold our components
        VBox root = new VBox();
        root.setSpacing(10);
        root.setAlignment(Pos.CENTER);

        // add the components to the VBox
        root.getChildren().addAll(pushMeTextField, secondField, pushMeButton, minusButton, timesButton, divideButton, pushMeLabel, minusLabel, timesLabel, divideLabel);


        // create a new scene
        Scene scene = new Scene(root, 500, 500);

        // add the scene to the stage, then configure the stage and make it visible
        stage.setScene(scene);
        stage.setTitle("Calculator V1");
        stage.show();
    }
    

    public static void main(String[] args) {
        launch(args);
    }
}
